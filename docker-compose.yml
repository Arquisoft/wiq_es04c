version: '3'
services:
  mongodb:
    container_name: mongodb-${teamname:-wiq_es04c}
    image: mongo
    profiles: ["dev", "prod"]
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - mynetwork
  # Servicio de MySQL no se mete en el release te bajas la ultima imagen 
  questionservice-mysql:
    image: mysql:latest
    container_name: questionservice-mysql-${teamname:-wiq_es04c}
    environment:
      MYSQL_USER: bidof
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: questions_db
      DB_PORT: 3306
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      #montar en el directorio de mysql el archivo schema que esta en questionservice/database para que lo tenga el contendor y lo pueda ejecutar 
      #create_db es true  
      - ./questionservice/database/:/docker-entrypoint-initdb.d
    networks:
      - mynetwork
    expose:
      - "3306"

  authservice:
    container_name: authservice-${teamname:-wiq_es04c}
    image: ghcr.io/arquisoft/${teamname:-wiq_es04c}/authservice:latest
    profiles: ["dev", "prod"]
    build: ./users/authservice
    depends_on:
      - mongodb
    ports:
      - "8002:8002"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/userdb

  userservice:
    container_name: userservice-${teamname:-wiq_es04c}
    image: ghcr.io/arquisoft/${teamname:-wiq_es04c}/userservice:latest
    profiles: ["dev", "prod"]
    build: ./users/userservice
    depends_on:
      - mongodb
    ports:
      - "8001:8001"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/userdb

  gatewayservice:
    container_name: gatewayservice-${teamname:-wiq_es04c}
    image: ghcr.io/arquisoft/${teamname:-wiq_es04c}/gatewayservice:latest
    profiles: ["dev", "prod"]
    build: ./gatewayservice
    depends_on:
      - mongodb
      - userservice
      - authservice
    ports:
      - "8000:8000"
    networks:
      - mynetwork
    environment:
      GENERATE_SERVICE_URL: http://questionservice:8003
      AUTH_SERVICE_URL: http://authservice:8002
      USER_SERVICE_URL: http://userservice:8001


  questionservice:
    container_name: questionservice-${teamname:-wiq_es04c}
    build: ./questionservice
    depends_on:
      - questionservice-mysql
    ports:
      - "8003:8003"
    networks:
      - mynetwork
    environment:
      DB_HOST: questionservice-mysql


  webapp:
    container_name: webapp-${teamname:-wiq_es04c}
    image: ghcr.io/arquisoft/${teamname:-wiq_es04c}/webapp:latest
    profiles: ["dev", "prod"]
    build: ./webapp
    depends_on:
      - gatewayservice
    ports:
      - "3000:3000" 
    environment:
    - API_URI=${API_URI}

  prometheus:
    image: prom/prometheus
    container_name: prometheus-${teamname:-wiq_es04c}
    profiles: ["dev"]
    networks:
      - mynetwork
    volumes:
      - ./gatewayservice/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on: 
      - gatewayservice
      
  grafana:
    image: grafana/grafana
    container_name: grafana-${teamname:-wiq_es04c}
    profiles: ["dev"]
    networks:
      - mynetwork
    volumes:
      - grafana_data:/var/lib/grafana
      - ./gatewayservice/monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SERVER_HTTP_PORT=9091
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "9091:9091"
    depends_on: 
      - prometheus


volumes:
  mongodb_data:
  prometheus_data: 
  grafana_data: 
  mysql-data:


networks:
  mynetwork:
    driver: bridge
